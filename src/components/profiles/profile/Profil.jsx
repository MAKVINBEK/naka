import { useState } from 'react';
import { Header_Profile } from '../Header_Profile';
import css from './Profile.module.css';
import Sidebar from '../Sidebar';
import user from "../../../img/profile-user.png"
import ReactDOM from "react-dom";
import CodeInput from './CodeInput';
import { FiEyeOff } from "react-icons/fi";
import { SlEye } from "react-icons/sl";
import { IoIosArrowBack } from "react-icons/io";
import { GoDotFill } from "react-icons/go";
import { IoIosArrowDown } from "react-icons/io";
import { HiOutlineMail } from "react-icons/hi";



const tabs = [
    { label: '–û—Å–Ω–æ–≤–Ω–æ–µ', },
    { label: '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', question: "?" },
    { label: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', question: "?" },
    { label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', },
];

const countryCodes = ["+966", "+7", "+996"];

const Profile = () => {
    const [activeTab, setActiveTab] = useState('–û—Å–Ω–æ–≤–Ω–æ–µ');
    const [cod, setCod] = useState(false)
    const [codInput, setCodInput] = useState(false)

    const [visible1, setVisible1] = useState(false);
    const [visible2, setVisible2] = useState(false);

    const handleComplete = (code) => {
        console.log("–í–≤–µ–¥—ë–Ω–Ω—ã–π –∫–æ–¥:", code);
    };

    const [close, setClose] = useState(false)

    const [code, setCode] = useState("+966");
    const [number, setNumber] = useState("");

    const confirm = number.length === 0 ? css.noConfirm : css.confirm;

    const [verificate, setVerificate] = useState(false)

    const [changePassword, setChangePassword] = useState(false)
    const [forgotPassword, setForgotPassword] = useState(false)
    const [changeInput, setChangeInput] = useState(false)



    return (
        <div className={css.parent}>
            <Header_Profile />
            <div className={css.flex}>
                <Sidebar close={close} setClose={setClose} />
                <div className={css.profile}>
                    <button className={css.menu_profile} onClick={() => setClose(true)}><IoIosArrowBack /></button>
                    <h2>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</h2>
                    <div className={css.tab_nav}>
                        {tabs.map((tab, index) => (
                            <button
                                key={index}
                                className={`${css.tab_button} ${activeTab === tab.label ? css.active : ''}`}
                                onClick={() => setActiveTab(tab.label)}
                            >
                                {tab.label} <span>{tab.question}</span>
                            </button>
                        ))}
                    </div>

                    <div className={css.solid}></div>

                    <div className={css.tab_content}>
                        {activeTab === '–û—Å–Ω–æ–≤–Ω–æ–µ' && (
                            <div>
                                <div className={css.block}>
                                    <div className={css.user}>
                                        <img src={user} alt="profile" />
                                        <div>
                                            <h4>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</h4>
                                            <p>–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω</p>
                                        </div>
                                    </div>
                                    <div className={css.data_profil}>
                                        <div>
                                            <h4>ID –ø–æ–ª–∑–æ–≤–∞—Ç–µ–ª—è</h4>
                                            <p>AFSA ASAH SAGH AHGS AGSH  AGSH</p>
                                        </div>
                                        <div className={css.solid_gorizont}></div>
                                        <div>
                                            <h4>–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h4>
                                            <p>09.07.2025 12:45</p>
                                        </div>
                                    </div>
                                </div>
                                <div className={css.block}>
                                    <div className={css.vvod}>
                                        <div className={css.inputs}>
                                            <label >–§–∞–º–∏–ª–∏—è</label>
                                            <input type="text" placeholder='–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é' />
                                        </div>
                                        <div className={css.inputs}>
                                            <label >–ò–º—è</label>
                                            <input type="text" placeholder='–í–≤–µ–¥–∏—Ç–µ –∏–º—è' />
                                        </div>
                                        <div className={css.inputs} >
                                            <label >–û—Ç—á–µ—Å—Ç–≤–æ</label>
                                            <input type="text" placeholder='–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ' />
                                        </div>
                                        <div className={css.inputs}>
                                            <label >–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</label>
                                            <input type="date" placeholder='DD.MM.YYYY' />
                                        </div>
                                        <div className={css.inputs}>
                                            <label >–°—Ç—Ä–∞–Ω–∞</label>
                                            <div className={css.from}>
                                                <select>
                                                    <option value="–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω">–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω</option>
                                                    <option value="–ö–∞–∑–∞–∫—Å—Ç–∞–Ω">–ö–∞–∑–∞–∫—Å—Ç–∞–Ω</option>
                                                </select>
                                                <IoIosArrowDown className={css.icooo} />
                                            </div>
                                        </div>
                                        <div className={css.inputs}>
                                            <label >–¢–µ–ª–µ—Ñ–æ–Ω</label>
                                            <div className={css.phone_input}>
                                                <div className={css.dropdown}>
                                                    <IoIosArrowDown className={css.arrow_phone} />
                                                    <select value={code} onChange={(e) => setCode(e.target.value)}>
                                                        {countryCodes.map((c) => (
                                                            <option key={c} value={c}>{c}</option>
                                                        ))}
                                                    </select>
                                                </div>
                                                <input
                                                    type="number"
                                                    placeholder="000 000 000"
                                                    value={number}
                                                    onChange={(e) => setNumber(e.target.value)}
                                                />
                                                <button className={confirm} onClick={() => {
                                                    if (number.length !== 0) {
                                                        setCod(true);
                                                    }
                                                }}>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>
                                            </div>
                                        </div>
                                        <button className={css.submit} >–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                                    </div>
                                </div>
                            </div>
                        )}
                        {activeTab === '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è' && (
                            <div className={css.cards}>
                                <div className={css.block}>
                                    <h4>üîí –ì–æ—Å—Ç—å (<span>–Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω</span>)</h4>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h5>
                                    <p>‚ùå –û–±–º–µ–Ω –≤–∞–ª—é—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω<br />‚ùå –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω <br /> ‚ùå –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ<br />‚ùå –ü–æ–≤—ã—à–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</p>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è</h5>
                                    <p>–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</p>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è</h5>
                                    <p>–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞</p>

                                    <button className={css.verificate} onClick={() => setVerificate(true)}>–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é</button>
                                </div>
                                <div className={css.block}>
                                    <h4>üë§ –ß–∞—Å—Ç–Ω–æ–µ –ª–∏—Ü–æ</h4>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h5>
                                    <p>‚úÖ –û–±–º–µ–Ω –≤–∞–ª—é—Ç –¥–æ—Å—Ç—É–ø–µ–Ω<br /> ‚úÖ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã<br />‚ùå –ü–æ–≤—ã—à–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã<br />‚ùå –ü–µ—Ä–µ–≤–æ–¥—ã –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</p>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è</h5>
                                    <p>–î–µ–ø–æ–∑–∏—Ç –¥–æ $50 000 (–≤—Å–µ–≥–æ) <br /> –í—ã–≤–æ–¥ –¥–æ $10 000 –≤ —Å—É—Ç–∫–∏</p>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è</h5>
                                    <p>üì± –¢–µ–ª–µ—Ñ–æ–Ω <br /> üìÑ –ü–∞—Å–ø–æ—Ä—Ç <br /> üì∏ –°–µ–ª—Ñ–∏ —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º</p>

                                    <button className={css.verificate} onClick={() => setVerificate(true)}>–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é</button>
                                </div>
                                <div className={css.block}>
                                    <h4>üè¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ</h4>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h5>
                                    <p>‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É—Ä–æ–≤–Ω—è 1 <br /> ‚úÖ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã<br />‚úÖ –ü–µ—Ä–µ–≤–æ–¥—ã –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏<br />‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ–ª—å—à–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</p>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è</h5>
                                    <p>–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É</p>
                                    <div className={css.solid + " " + css.sto}></div>
                                    <h5>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è</h5>
                                    <p>üìÑ –£—á—Ä–µ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã <br /> üìß –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ—á—Ç–∞ <br /> üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã <br /> üìú –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞</p>

                                    <button className={css.verificate} onClick={() => setVerificate(true)}>–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é</button>
                                </div>

                            </div>
                        )}
                        {activeTab === '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å' && (
                            <div>
                                <div className={css.block}>
                                    <div className={css.bezopasnost}>
                                        <div>
                                            <h4>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h4>
                                            <h5>–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</h5>
                                            <p>–ß—Ç–æ–±—ã –Ω–µ –∂–¥–∞—Ç—å –û–¢–†-–∫–æ–¥, –ø–æ–ª—É—á–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–µ –∫–æ–¥—ã —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Google Authenticator. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ.</p>
                                        </div>
                                        <span>–ü–æ–¥–∫–ª—é—á–∏—Ç—å</span>
                                    </div>
                                </div>
                                <div className={css.block}>
                                    <div className={css.lichny + " " + css.bezopasnost}>
                                        <div>
                                            <h4>–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h4>
                                            <p>Email:</p>
                                            <h5>maratovarayana00@gmail.com</h5>
                                            <p>–ü–∞—Ä–æ–ª—å:</p>
                                            <div>{Array.from({ length: 8 }).map((_, index) => (
                                                <GoDotFill key={index} />
                                            ))}</div>
                                        </div>
                                        <span onClick={() => setChangePassword(true)}>–°–º–µ–Ω–∏—Ç—å</span>
                                    </div>
                                </div>
                            </div>
                        )}
                        {activeTab === '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' && (
                            <div>
                                <div className={css.block}>
                                    <div className={css.bezopas_push}>
                                        <h4>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h4>
                                        <div className={css.fleex}>
                                            <label className={css.switch}>
                                                <input type="checkbox" />
                                                <span className={css.slider}></span>
                                            </label>
                                            <p>–í—Å–ø–ª—ã–≤–∞—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ</p>
                                        </div>
                                        <div className={css.fleex}>
                                            <label className={css.switch}>
                                                <input type="checkbox" />
                                                <span className={css.slider}></span>
                                            </label>
                                            <p>–ù–∞–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ e-mail</p>
                                        </div>
                                    </div>
                                </div>
                                <div className={css.block}>
                                    <div className={css.bezopas_push}>
                                        <h4>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h4>
                                        <div className={css.fleex}>
                                            <label className={css.switch}>
                                                <input type="checkbox" />
                                                <span className={css.slider}></span>
                                            </label>
                                            <p>–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞</p>
                                        </div>
                                        <div className={css.fleex}>
                                            <label className={css.switch}>
                                                <input type="checkbox" />
                                                <span className={css.slider}></span>
                                            </label>
                                            <p>–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –≤—ã–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤ —Å –∫–æ—à–µ–ª—å–∫–∞</p>
                                        </div>
                                        <div className={css.fleex}>
                                            <label className={css.switch}>
                                                <input type="checkbox" />
                                                <span className={css.slider}></span>
                                            </label>
                                            <p>–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –≤—Ö–æ–¥–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–µ–Ω–µ—Ç </p>
                                        </div>
                                        <div className={css.fleex}>
                                            <label className={css.switch}>
                                                <input type="checkbox" />
                                                <span className={css.slider}></span>
                                            </label>
                                            <p>–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        )}
                    </div>
                </div>
            </div>

            {cod && ReactDOM.createPortal(
                <div className={css.overlay} onClick={() => setCod(false)}>
                    <div className={css.modal} onClick={(e) => e.stopPropagation()}>
                        <h2 >–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ —Å–º—Å</h2>
                        <p>–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–¥ –Ω–∞ {code}{number}</p>
                        <CodeInput length={6} onComplete={handleComplete} />
                        <div className={css.eshe}><button className={css.eshe_submit} onClick={() => { setCod(false); }}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ä–∞–∑</button></div>
                    </div>
                </div>,
                document.body
            )}

            {verificate && ReactDOM.createPortal(
                <div className={css.overlay} onClick={() => setVerificate(false)}>
                    <div className={css.modal} onClick={(e) => e.stopPropagation()}>
                        <h2 className={css.text_aligt_left}>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: üë§–ß–∞—Å—Ç–Ω–æ–µ –ª–∏—Ü–æ</h2>
                        <form className={css.form_verificate}>
                            <div className={css.inputs}>
                                <label >–§–∞–º–∏–ª–∏—è</label>
                                <input type="text" placeholder='–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é' />
                            </div>
                            <div className={css.inputs}>
                                <label >–ò–º—è</label>
                                <input type="text" placeholder='–í–≤–µ–¥–∏—Ç–µ –∏–º—è' />
                            </div>
                            <div className={css.inputs} >
                                <label >–û—Ç—á–µ—Å—Ç–≤–æ</label>
                                <input type="text" placeholder='–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ' />
                            </div>
                            <div className={css.inputs}>
                                <label >–°—Ç—Ä–∞–Ω–∞</label>
                                <div className={css.from}>
                                    <select>
                                        <option value="–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω">–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω</option>
                                        <option value="–ö–∞–∑–∞–∫—Å—Ç–∞–Ω">–ö–∞–∑–∞–∫—Å—Ç–∞–Ω</option>
                                    </select>
                                    <IoIosArrowDown className={css.icooo} />
                                </div>
                            </div>
                            <div className={css.inputs}>
                                <label >–¢–µ–ª–µ—Ñ–æ–Ω</label>
                                <div className={css.phone_input}>
                                    <div className={css.dropdown}>
                                        <IoIosArrowDown className={css.arrow_phone} />
                                        <select value={code} onChange={(e) => setCode(e.target.value)}>
                                            {countryCodes.map((c) => (
                                                <option key={c} value={c}>{c}</option>
                                            ))}
                                        </select>
                                    </div>
                                    <input
                                        type="number"
                                        placeholder="000 000 000"
                                        value={number}
                                        onChange={(e) => setNumber(e.target.value)}
                                    />
                                    <button className={confirm} onClick={() => {
                                        if (number.length !== 0) {
                                            setCod(true);
                                        }
                                    }}>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>
                                </div>
                            </div>
                            <div className={css.ff}>
                                <button onClick={() => setVerificate(false)}>–û—Ç–º–µ–Ω–∏—Ç—å</button>
                                <button className={css.delete_submit} onClick={() => setVerificate(false)}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                            </div>
                        </form>
                    </div>
                </div>,
                document.body
            )}

            {changePassword && ReactDOM.createPortal(
                <div className={css.overlay} onClick={() => setChangePassword(false)}>
                    <div className={css.modal} onClick={(e) => e.stopPropagation()}>
                        <h2 >–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</h2>
                        <form className={css.form_changePassword}>
                            <div className={css.password_wrapper}>
                                <input type="email"
                                    placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
                                    className={css.password_input} />
                                <span className={css.toggle_icon}> <HiOutlineMail /></span>
                            </div>
                            <div className={css.password_wrapper}>
                                <input
                                    type={visible1 ? "text" : "password"}
                                    placeholder="–ü–∞—Ä–æ–ª—å"
                                    className={css.password_input}
                                />
                                <span className={css.toggle_icon} onClick={() => setVisible1(!visible1)}>
                                    {visible1 ? <SlEye /> : <FiEyeOff />}
                                </span>
                            </div>
                            <div className={css.password_wrapper}>
                                <input
                                    type={visible2 ? "text" : "password"}
                                    placeholder="–ü–∞—Ä–æ–ª—å"
                                    className={css.password_input}
                                />
                                <span className={css.toggle_icon} onClick={() => setVisible2(!visible2)}>
                                    {visible2 ? <SlEye /> : <FiEyeOff />}
                                </span>
                            </div>
                            <button className={css.change_password} onClick={() => { setChangePassword(false); setForgotPassword(true) }}>–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</button>
                            <div className={css.ff}>
                                <button onClick={() => setChangePassword(false)}>–û—Ç–º–µ–Ω–∏—Ç—å</button>
                                <button className={css.delete_submit} onClick={() => setChangePassword(false)}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                            </div>
                        </form>
                    </div>
                </div>,
                document.body
            )}

            {forgotPassword && ReactDOM.createPortal(
                <div className={css.overlay} onClick={() => setForgotPassword(false)}>
                    <div className={css.modal} onClick={(e) => e.stopPropagation()}>
                        <h2 >–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</h2>
                        <p>–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É</p>
                        <form className={css.form_forgotPassword}>
                            <div className={css.password_wrapper}>
                                <input type="email"
                                    placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
                                    className={css.password_input} />
                                <span className={css.toggle_icon}> <HiOutlineMail /></span>
                            </div>
                            <div className={css.ff}>
                                <button onClick={() => setForgotPassword(false)}>–û—Ç–º–µ–Ω–∏—Ç—å</button>
                                <button className={css.delete_submit} onClick={() => { setForgotPassword(false); setChangeInput(true) }}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                            </div>
                        </form>
                    </div>
                </div>,
                document.body
            )}

            {changeInput && ReactDOM.createPortal(
                <div className={css.overlay} onClick={() => setChangeInput(false)}>
                    <div className={css.modal} onClick={(e) => e.stopPropagation()}>
                        <h2 >–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</h2>
                        <form className={css.form_changePassword}>
                            <div className={css.password_wrapper}>
                                <input
                                    type={visible1 ? "text" : "password"}
                                    placeholder="–ü–∞—Ä–æ–ª—å"
                                    className={css.password_input}
                                />
                                <span className={css.toggle_icon} onClick={() => setVisible1(!visible1)}>
                                    {visible1 ? <SlEye /> : <FiEyeOff />}
                                </span>
                            </div>
                            <div className={css.password_wrapper}>
                                <input
                                    type={visible2 ? "text" : "password"}
                                    placeholder="–ü–∞—Ä–æ–ª—å"
                                    className={css.password_input}
                                />
                                <span className={css.toggle_icon} onClick={() => setVisible2(!visible2)}>
                                    {visible2 ? <SlEye /> : <FiEyeOff />}
                                </span>
                            </div>
                            <div className={css.ff}>
                                <button onClick={() => setChangeInput(false)}>–û—Ç–º–µ–Ω–∏—Ç—å</button>
                                <button className={css.delete_submit} onClick={() => setChangeInput(false)}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                            </div>
                        </form>
                    </div>
                </div>,
                document.body
            )}

        </div>
    );
};

export default Profile;
